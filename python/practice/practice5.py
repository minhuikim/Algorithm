# 분기 if
# if 조건:
#    실행 명령문

#weather = input("오늘 날씨는 어때요?")
from random import random


weather = "맑아요"
if weather == "비" or weather == "눈":
    print("우산을 챙기세요")
elif weather == "미세먼지":
    print("마스크를 챙기세요")
else:
    print("준비물 필요 없어요")
'''
준비물 필요 없어요
'''

#temp = int(input("기온은 어때요? "))
temp = -10
if 30 <= temp:
    print("너무 더워요. 나가지 마세요")
elif 10 <= temp and temp < 30:
    print("괜찮은 날씨에요")
elif 0 <= temp < 10:
    print("외투를 챙기세요")
else:
    print("너무 추워요. 나가지 마세요")
'''
너무 추워요. 나가지 마세요
'''

# 반복 for
for waiting_no in [0, 1, 2, 3, 4]:
    print("대기번호 : {0}".format(waiting_no))
'''
대기번호 : 0
대기번호 : 1
대기번호 : 2
대기번호 : 3
대기번호 : 4
'''

#randrange()
for waiting_no in range(1, 6):  # 1, 2, 3, 4, 5
    print("대기번호 : {0}".format(waiting_no))
'''
대기번호 : 1
대기번호 : 2
대기번호 : 3
대기번호 : 4
대기번호 : 5
'''

starbucks = ["아이언맨", "토르", "아이엠 그루트"]
for customer in starbucks:
    print("{0}, 커피가 준비되었습니다.".format(customer))
'''
아이언맨, 커피가 준비되었습니다.
토르, 커피가 준비되었습니다.
아이엠 그루트, 커피가 준비되었습니다.
'''

# 반복 while
customer = "토르"
index = 5
while index >= 1:
    print("{0}, 커피가 준비되었습니다. {1} 번 남았어요.".format(customer, index))
    index -= 1
    if index == 0:
        print("커피는 폐기처분 되었습니다.")
'''
토르, 커피가 준비되었습니다. 5 번 남았어요.
토르, 커피가 준비되었습니다. 4 번 남았어요.
토르, 커피가 준비되었습니다. 3 번 남았어요.
토르, 커피가 준비되었습니다. 2 번 남았어요.
토르, 커피가 준비되었습니다. 1 번 남았어요.
커피는 폐기처분 되었습니다.
'''

customer = "아이언맨"
index = 1
while False:
#while True:
    print("{0}, 커피가 준비 되었습니다. 호출 {1}회".format(customer, index))
    index += 1
'''
아이언맨, 커피가 준비 되었습니다. 호출 1회 .... 무한반복
'''

customer = "토르"
person = "Unknown"
while person != customer : # person == customer -> 반복 종료
    print("{0}, 커피가 준비 되었습니다.".format(customer))
    #person = input("이름이 어떻게 되세요? ")
    person = "토르"
'''
토르, 커피가 준비 되었습니다.
이름이 어떻게 되세요? 아이언맨
토르, 커피가 준비 되었습니다.
이름이 어떻게 되세요? 토르
'''

# continue, break
absent = [2, 5] # 결석
no_book = [7]   # 책을 깜빡했음
for student in range(1, 11): # 1,2,3,4,5,6,7,8,9,10
    if student in absent:
        continue
    elif student in no_book:
        print("오늘 수업 여기까지. {0}은 교무실로 따라와".format(student))
        break
    print("{0}, 책을 읽어봐".format(student))
'''
1, 책을 읽어봐
3, 책을 읽어봐
4, 책을 읽어봐
6, 책을 읽어봐
오늘 수업 여기까지. 7은 교무실로 따라와
'''

# 한 줄 for
# 출석번호가  1 2 3 4, 앞에 100을 붙이기로 함 -> 101, 102, 103, 104...
students = [1, 2, 3, 4, 5]
print(students)     # [1, 2, 3, 4, 5]
students = [i+100 for i in students]
print(students)     # [101, 102, 103, 104, 105]

# 학생 이름을 길이로 변환
students = ["Iron man", "Thor", "I am groot"]
students = [len(i) for i in students]
print(students)     # [8, 4, 10]

'''
당신은 Cocoa 서비스를 이용하는 택시 기사님입니다.
50명의 승객과 매칭 기회가 있을 때, 총 탑승 승객 수를 구하는 프로그램을 작성하시오.

조건 1 : 승객별 운행 소요 시간은 5분 ~ 50분 사이의 난수로 정해집니다.
조건 2 : 당신은 소요 시간 5분 ~ 15분 사이의 승객만 매칭해야 합니다.

(출력분 예제)
[O] 1번째 손님 (소요시간 : 15분)
[ ] 2번째 손님 (소요시간 : 50분)
[O] 3번째 손님 (소요시간 : 5분)
...
[ ] 50번째 손님 (소요시간 : 16분)

총 탑승 승객 : 2분
'''

from random import *

cnt = 0                # 총 탑승 승객 수
for m in range(1, 51):      # 1~50의 수 (승객)
    t = randrange(5, 51)    # 5~50분 소요시간
    if 5 <= t <= 15:        # 5~15분 이내의 손님, 탑승 승객 수 증가 (매칭성공)
        yn = 'O'
        cnt += 1
    else:                   # 매칭 실패
        yn = ' '

    print("[{0}] {1}번째 손님 (소요시간 : {2}분)".format(yn,m,t))

print("총 탑승 승객 : {0} 분".format(cnt))
'''
[ ] 1번째 손님 (소요시간 : 26분)
[O] 2번째 손님 (소요시간 : 8분)
[ ] 3번째 손님 (소요시간 : 20분)
[ ] 4번째 손님 (소요시간 : 38분)
[ ] 5번째 손님 (소요시간 : 24분)
[ ] 6번째 손님 (소요시간 : 19분)
[ ] 7번째 손님 (소요시간 : 30분)
[ ] 8번째 손님 (소요시간 : 24분)
[ ] 9번째 손님 (소요시간 : 17분)
[ ] 10번째 손님 (소요시간 : 19분)
[ ] 11번째 손님 (소요시간 : 32분)
[ ] 12번째 손님 (소요시간 : 22분)
[O] 13번째 손님 (소요시간 : 10분)
[ ] 14번째 손님 (소요시간 : 30분)
[O] 15번째 손님 (소요시간 : 9분)
[ ] 16번째 손님 (소요시간 : 16분)
[O] 17번째 손님 (소요시간 : 8분)
[ ] 18번째 손님 (소요시간 : 35분)
[O] 19번째 손님 (소요시간 : 5분)
[O] 20번째 손님 (소요시간 : 9분)
[ ] 21번째 손님 (소요시간 : 23분)
[ ] 22번째 손님 (소요시간 : 42분)
[ ] 23번째 손님 (소요시간 : 42분)
[ ] 24번째 손님 (소요시간 : 27분)
[ ] 25번째 손님 (소요시간 : 36분)
[O] 26번째 손님 (소요시간 : 8분)
[ ] 27번째 손님 (소요시간 : 39분)
[ ] 28번째 손님 (소요시간 : 50분)
[O] 29번째 손님 (소요시간 : 13분)
[ ] 30번째 손님 (소요시간 : 49분)
[ ] 31번째 손님 (소요시간 : 16분)
[O] 32번째 손님 (소요시간 : 13분)
[ ] 33번째 손님 (소요시간 : 49분)
[ ] 34번째 손님 (소요시간 : 16분)
[ ] 35번째 손님 (소요시간 : 18분)
[O] 36번째 손님 (소요시간 : 8분)
[O] 37번째 손님 (소요시간 : 14분)
[ ] 38번째 손님 (소요시간 : 26분)
[ ] 39번째 손님 (소요시간 : 38분)
[ ] 40번째 손님 (소요시간 : 22분)
[ ] 41번째 손님 (소요시간 : 20분)
[ ] 42번째 손님 (소요시간 : 29분)
[ ] 43번째 손님 (소요시간 : 21분)
[ ] 44번째 손님 (소요시간 : 29분)
[ ] 45번째 손님 (소요시간 : 44분)
[ ] 46번째 손님 (소요시간 : 19분)
[ ] 47번째 손님 (소요시간 : 16분)
[ ] 48번째 손님 (소요시간 : 27분)
[ ] 49번째 손님 (소요시간 : 47분)
[ ] 50번째 손님 (소요시간 : 39분)
총 탑승 승객 : 11 분
'''